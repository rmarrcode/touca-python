# Copyright 2021 Touca, Inc. Subject to Apache-2.0 License.

name: touca-python-main

on:
  push:
    branches:
      - main
      - next
      - "feature/**"

jobs:
  build-sdk-python-local:
    name: build-sdk-python-local
    runs-on: ubuntu-20.04
    timeout-minutes: 15
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9, "3.10"]
    steps:
      - uses: actions/checkout@v2
      - name: authenticate to aws
        if: github.ref == 'refs/heads/main' && matrix.python-version == 3.9 && github.event_name == 'push'
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_ACTIONS_PUBLIC }}
          aws-secret-access-key: ${{ secrets.AWS_ACCESS_KEY_SECRET_ACTIONS_PUBLIC }}
          aws-region: us-east-2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: cache pip dependencies
        uses: actions/cache@v2
        env:
          cache-name: cache-pip-dependencies
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ matrix.python-version }}-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-${{ matrix.python-version }}-
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build
            ${{ runner.os }}-
      - name: install pip dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .[dev]
      - name: run unit tests
        run: |
          make test
      - name: generate docs
        run: |
          make docs
      - name: push docs to aws
        if: github.ref == 'refs/heads/main' && matrix.python-version == 3.9 && github.event_name == 'push'
        run: |
          tar -zcf python-docs-external.tar.gz local/docs
          aws s3 cp python-docs-external.tar.gz ${{ secrets.AWS_DEV_S3_BUCKET_BUILD }}/v1.4.0/
      - name: push coverage to aws
        if: github.ref == 'refs/heads/main' && matrix.python-version == 3.9 && github.event_name == 'push'
        run: |
          tar -zcf python-test-coverage.tar.gz local/tests
          aws s3 cp python-test-coverage.tar.gz ${{ secrets.AWS_DEV_S3_BUCKET_BUILD }}/v1.4.0/
      - name: build package distributable
        if: github.ref == 'refs/heads/main' && matrix.python-version == 3.9
        env:
          TWINE_NON_INTERACTIVE: true
        run: |
          pip install setuptools twine wheel
          python setup.py sdist bdist_wheel
          twine check dist/*
      - name: upload coverage to codecov
        if:
          github.ref == 'refs/heads/main' && matrix.python-version == 3.9 &&
          github.event_name == 'push'
        uses: codecov/codecov-action@v2
        env:
          OS: ${{ runner.os }}
          PYTHON: ${{ matrix.python-version }}
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./local/tests/coverage.xml
          env_vars: OS,PYTHON
          fail_ci_if_error: true
